import { MemberName, Key, SongMeta } from "../types";
import { SONG_TITLE } from "./constants";

export const getSongId = (songTitle: string): string => `song_${songTitle}`;

export const songMeta: SongMeta[] = [
  {
    id: getSongId(SONG_TITLE.AGAIN),
    key: Key.HALF_STEP,
    title: SONG_TITLE.AGAIN,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.ALIVE),
    key: Key.STANDARD,
    title: SONG_TITLE.ALIVE,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.ALL_THE_SMALL_THINGS),
    key: Key.STANDARD,
    title: SONG_TITLE.ALL_THE_SMALL_THINGS,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.BREED),
    key: Key.STANDARD,
    title: SONG_TITLE.BREED,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.BYE_BYE_BABY),
    key: Key.HALF_STEP,
    title: SONG_TITLE.BYE_BYE_BABY,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.CHECK_MY_BRAIN),
    key: { actual: Key.HALF_STEP, user: Key.HALF_STEP_DROPPED },
    title: SONG_TITLE.CHECK_MY_BRAIN,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.COLD_FEELINGS),
    key: { actual: Key.STANDARD, transposed: Key.HALF_STEP },
    title: SONG_TITLE.COLD_FEELINGS,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.CRACKERMAN),
    key: Key.STANDARD,
    title: SONG_TITLE.CRACKERMAN,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.EVERYDAY_IS_EXACTLY_THE_SAME),
    key: Key.STANDARD,
    title: SONG_TITLE.EVERYDAY_IS_EXACTLY_THE_SAME,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.EVERLONG),
    key: Key.DROP_D,
    title: SONG_TITLE.EVERLONG,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.EXIT),
    key: Key.STANDARD,
    title: SONG_TITLE.EXIT,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.GO),
    key: Key.DROP_D,
    title: SONG_TITLE.GO,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.GO_WITH_THE_FLOW),
    key: Key.STANDARD,
    title: SONG_TITLE.GO_WITH_THE_FLOW,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.GOD_IS_IN_THE_RADIO),
    key: Key.STANDARD,
    title: SONG_TITLE.GOD_IS_IN_THE_RADIO,
    vocals: [MemberName.JUSTIN],
  },
  {
    id: getSongId(SONG_TITLE.HASH_PIPE),
    key: Key.STANDARD,
    title: SONG_TITLE.HASH_PIPE,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.HYSTERIA),
    key: Key.STANDARD,
    title: SONG_TITLE.HYSTERIA,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.IN_BLOOM),
    key: Key.STANDARD,
    title: SONG_TITLE.IN_BLOOM,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.MAKE_IT_WIT_CHU),
    key: Key.STANDARD,
    title: SONG_TITLE.MAKE_IT_WIT_CHU,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.MAN_IN_THE_BOX),
    key: Key.HALF_STEP,
    title: SONG_TITLE.MAN_IN_THE_BOX,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.MISERABLE),
    key: Key.STANDARD,
    title: SONG_TITLE.MISERABLE,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.MY_NAME_IS_HUMAN),
    key: { actual: Key.DROP_D, user: Key.STANDARD },
    title: SONG_TITLE.MY_NAME_IS_HUMAN,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.ON_A_PLAIN),
    key: Key.DROP_D,
    title: SONG_TITLE.ON_A_PLAIN,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.OUT_OF_THE_BLACK),
    key: { actual: Key.DROP_D, user: Key.WHOLE_STEP },
    title: SONG_TITLE.OUT_OF_THE_BLACK,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.PSEUDO_SUICIDE),
    key: Key.STANDARD,
    title: SONG_TITLE.PSEUDO_SUICIDE,
    vocals: [MemberName.JUSTIN, MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.PURE_MASSACRE),
    key: Key.DROP_D,
    title: SONG_TITLE.PURE_MASSACRE,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.REMEDY),
    key: Key.HALF_STEP_DROPPED,
    title: SONG_TITLE.REMEDY,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.SAY_IT_AINT_SO),
    key: Key.HALF_STEP,
    title: SONG_TITLE.SAY_IT_AINT_SO,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.SLITHER),
    key: Key.DROP_D,
    title: SONG_TITLE.SLITHER,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.SMOOTH_SAILING),
    key: Key.STANDARD,
    title: SONG_TITLE.SMOOTH_SAILING,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.STARS),
    key: Key.DROP_D,
    title: SONG_TITLE.STARS,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.SUPERSONIC),
    key: Key.STANDARD,
    title: SONG_TITLE.SUPERSONIC,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.SUPER_MASSIVE_BLACK_HOLE),
    key: Key.STANDARD,
    title: SONG_TITLE.SUPER_MASSIVE_BLACK_HOLE,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.TEAR_YOU_APART),
    key: Key.HALF_STEP_DROPPED,
    title: SONG_TITLE.TEAR_YOU_APART,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.TEENAGERS),
    key: { actual: Key.STANDARD, transposed: Key.HALF_STEP },
    title: SONG_TITLE.TEENAGERS,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.TODAY),
    key: Key.HALF_STEP,
    title: SONG_TITLE.TODAY,
    vocals: [MemberName.PERRY],
  },
  {
    id: getSongId(SONG_TITLE.TYLER),
    key: { actual: Key.STANDARD, transposed: Key.HALF_STEP },
    title: SONG_TITLE.TYLER,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.WOLF_LIKE_ME),
    key: { actual: Key.DROP_D, transposed: Key.HALF_STEP },
    title: SONG_TITLE.WOLF_LIKE_ME,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.WOULD),
    key: Key.HALF_STEP,
    title: SONG_TITLE.WOULD,
    vocals: [MemberName.CHRIS],
  },
  {
    id: getSongId(SONG_TITLE.YOU_CAN_BE_SO_CRUEL),
    key: Key.DROP_D,
    title: SONG_TITLE.YOU_CAN_BE_SO_CRUEL,
    vocals: [MemberName.PERRY],
  },
];
